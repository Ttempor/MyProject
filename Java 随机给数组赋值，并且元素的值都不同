main  {
		BubbleSort(randomLottery());
}




//主要函数，实现功能为：给定一个数组长度，数组元素的值在[1,30]的整数之间，且数组中每个元素的值都不能重复。（由于[1,30]之间的整数只有30个，所以数组长度不能超过30，实测若超过30个元素，
//0.0                                                                                                                                                        以下代码会无限循环）
  static int[] randomLottery() {
		int arry[] = new int[5];
//		int tempInt = (int) (Math.random() * 30 + 1);
//		System.out.println(tempInt);
		boolean bool = false;
		for (int i = 0; i < arry.length;) {// 对每位数进行操作
			bool = false;
			arry[i] = (int) (Math.random() * 30 + 1);
			int temp = arry[i];
			for (int j = 0; j < i;) {// 检测当前数值是否与之前数值相等
				if (temp == arry[j]) {
					bool = true;
					break;
				} else {
					j++;
				}
			}
			if (bool) {// 若前数值与之前数值相等，就重新执行一遍
				continue;
			} else {
				i++;
			}
		}
		for (int i : arry) {
			System.out.print(i + " ");
		}
		System.out.println("");
		return arry;
	}
  
  
//冒泡排序，将数组从大到小排好序，方便验证上面函数不会出现重复元素
 static int BubbleSort(int[] arry) {
//long timeBegin = System.currentTimeMillis();
		int[] intTest = new int[] { 2, 9, 5, 7, 3, 0, 6, 595, 26, -45, 565, 8989, 6, 5, 50, 6, 595, 26, -45, 565, 8989,
				6, 5, 5, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50,
				6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6,
				26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26,
				-45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45,
				565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565, 8989, 6, 5, 50, 6, 26, -45, 565,
				8989, 6, 5, 50, 6 };//写很多的数，看看排序要多久
		intTest = arry;//新加的代码，修改排序算法，验证randomLottery()的正确性
		int swap = 0; // 长度为3
		for (int i = 0; i < intTest.length; i++) {
			// System.out.println("i=" + i); //长度为3
			for (int j = 0; j < intTest.length - i - 1; j++) {
				if (intTest[j] < intTest[j + 1]) {
					swap = intTest[j];
					intTest[j] = intTest[j + 1];
					intTest[j + 1] = swap;
					// System.out.println(intTest[j]);
				}
				// System.out.println("i=====" + i); //长度为3
			}
		}
		for (int i : intTest) {
			System.out.print(" " + i);
		}
//导包测试shift + ctrl + o		Scanner newscaner = new Scanner(System.in);
		System.out.println();
//long timeEnd = System.currentTimeMillis();
//System.out.println("冒泡排序时间长度：" + (timeEnd - timeBegin));
		return 0;
	}
  
